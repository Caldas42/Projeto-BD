{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\git\\\\BDProjeto\\\\BDProjeto\\\\bdproj-frontend\\\\src\\\\PessoaComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:8080/api/pessoas'; // URL do seu back-end\n\nfunction PessoaComponent() {\n  _s();\n  const [pessoas, setPessoas] = useState([]);\n  const [idade, setIdade] = useState('');\n  const [editId, setEditId] = useState(null);\n\n  // Efeito para carregar as pessoas quando o componente é montado\n  useEffect(() => {\n    fetchPessoas();\n  }, []);\n\n  // Função para buscar os dados da API (Visualização)\n  const fetchPessoas = async () => {\n    try {\n      const response = await fetch(API_URL);\n      const data = await response.json();\n      setPessoas(data);\n    } catch (error) {\n      console.error(\"Erro ao buscar pessoas:\", error);\n    }\n  };\n\n  // Função para lidar com o envio do formulário (Inserção e Alteração)\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!idade) return;\n    const pessoa = {\n      idade: parseInt(idade, 10)\n    };\n    try {\n      let response;\n      if (editId) {\n        // Alteração (PUT)\n        response = await fetch(`${API_URL}/${editId}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(pessoa)\n        });\n      } else {\n        // Inserção (POST)\n        response = await fetch(API_URL, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(pessoa)\n        });\n      }\n      if (response.ok) {\n        fetchPessoas(); // Recarrega a lista\n        resetForm();\n      }\n    } catch (error) {\n      console.error(\"Erro ao salvar pessoa:\", error);\n    }\n  };\n\n  // Função para preparar o formulário para edição\n  const handleEdit = pessoa => {\n    setEditId(pessoa.cod);\n    setIdade(pessoa.idade);\n  };\n\n  // Função para deletar (Deleção)\n  const handleDelete = async cod => {\n    try {\n      const response = await fetch(`${API_URL}/${cod}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        fetchPessoas(); // Recarrega a lista\n      }\n    } catch (error) {\n      console.error(\"Erro ao deletar pessoa:\", error);\n    }\n  };\n\n  // Função para limpar o formulário\n  const resetForm = () => {\n    setEditId(null);\n    setIdade('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Gerenciamento de Pessoas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: idade,\n        onChange: e => setIdade(e.target.value),\n        placeholder: \"Idade da pessoa\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: editId ? 'Atualizar' : 'Adicionar'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), editId && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: resetForm,\n        children: \"Cancelar Edi\\xE7\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Lista de Pessoas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"C\\xF3digo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Idade\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"A\\xE7\\xF5es\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: pessoas.map(pessoa => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: pessoa.cod\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: pessoa.idade\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEdit(pessoa),\n              children: \"Alterar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(pessoa.cod),\n              children: \"Deletar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)]\n        }, pessoa.cod, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(PessoaComponent, \"34yU43Gt0vDa1HlBN12mYzBdNLY=\");\n_c = PessoaComponent;\nexport default PessoaComponent;\nvar _c;\n$RefreshReg$(_c, \"PessoaComponent\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","API_URL","PessoaComponent","_s","pessoas","setPessoas","idade","setIdade","editId","setEditId","fetchPessoas","response","fetch","data","json","error","console","handleSubmit","event","preventDefault","pessoa","parseInt","method","headers","body","JSON","stringify","ok","resetForm","handleEdit","cod","handleDelete","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","e","target","placeholder","required","onClick","border","map","_c","$RefreshReg$"],"sources":["C:/Users/user/git/BDProjeto/BDProjeto/bdproj-frontend/src/PessoaComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst API_URL = 'http://localhost:8080/api/pessoas'; // URL do seu back-end\r\n\r\nfunction PessoaComponent() {\r\n  const [pessoas, setPessoas] = useState([]);\r\n  const [idade, setIdade] = useState('');\r\n  const [editId, setEditId] = useState(null);\r\n\r\n  // Efeito para carregar as pessoas quando o componente é montado\r\n  useEffect(() => {\r\n    fetchPessoas();\r\n  }, []);\r\n\r\n  // Função para buscar os dados da API (Visualização)\r\n  const fetchPessoas = async () => {\r\n    try {\r\n      const response = await fetch(API_URL);\r\n      const data = await response.json();\r\n      setPessoas(data);\r\n    } catch (error) {\r\n      console.error(\"Erro ao buscar pessoas:\", error);\r\n    }\r\n  };\r\n\r\n  // Função para lidar com o envio do formulário (Inserção e Alteração)\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (!idade) return;\r\n\r\n    const pessoa = { idade: parseInt(idade, 10) };\r\n\r\n    try {\r\n      let response;\r\n      if (editId) {\r\n        // Alteração (PUT)\r\n        response = await fetch(`${API_URL}/${editId}`, {\r\n          method: 'PUT',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(pessoa),\r\n        });\r\n      } else {\r\n        // Inserção (POST)\r\n        response = await fetch(API_URL, {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(pessoa),\r\n        });\r\n      }\r\n      \r\n      if (response.ok) {\r\n        fetchPessoas(); // Recarrega a lista\r\n        resetForm();\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Erro ao salvar pessoa:\", error);\r\n    }\r\n  };\r\n\r\n  // Função para preparar o formulário para edição\r\n  const handleEdit = (pessoa) => {\r\n    setEditId(pessoa.cod);\r\n    setIdade(pessoa.idade);\r\n  };\r\n\r\n  // Função para deletar (Deleção)\r\n  const handleDelete = async (cod) => {\r\n    try {\r\n      const response = await fetch(`${API_URL}/${cod}`, {\r\n        method: 'DELETE',\r\n      });\r\n      if (response.ok) {\r\n        fetchPessoas(); // Recarrega a lista\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Erro ao deletar pessoa:\", error);\r\n    }\r\n  };\r\n\r\n  // Função para limpar o formulário\r\n  const resetForm = () => {\r\n    setEditId(null);\r\n    setIdade('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Gerenciamento de Pessoas</h2>\r\n      \r\n      {/* Formulário de Inserção e Alteração */}\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"number\"\r\n          value={idade}\r\n          onChange={(e) => setIdade(e.target.value)}\r\n          placeholder=\"Idade da pessoa\"\r\n          required\r\n        />\r\n        <button type=\"submit\">{editId ? 'Atualizar' : 'Adicionar'}</button>\r\n        {editId && <button type=\"button\" onClick={resetForm}>Cancelar Edição</button>}\r\n      </form>\r\n\r\n      {/* Tabela de Visualização */}\r\n      <h3>Lista de Pessoas</h3>\r\n      <table border=\"1\">\r\n        <thead>\r\n          <tr>\r\n            <th>Código</th>\r\n            <th>Idade</th>\r\n            <th>Ações</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {pessoas.map((pessoa) => (\r\n            <tr key={pessoa.cod}>\r\n              <td>{pessoa.cod}</td>\r\n              <td>{pessoa.idade}</td>\r\n              <td>\r\n                <button onClick={() => handleEdit(pessoa)}>Alterar</button>\r\n                <button onClick={() => handleDelete(pessoa.cod)}>Deletar</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PessoaComponent;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,OAAO,GAAG,mCAAmC,CAAC,CAAC;;AAErD,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;;EAE1C;EACAC,SAAS,CAAC,MAAM;IACdY,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMA,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACX,OAAO,CAAC;MACrC,MAAMY,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCT,UAAU,CAACQ,IAAI,CAAC;IAClB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;EACF,CAAC;;EAED;EACA,MAAME,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,IAAI,CAACb,KAAK,EAAE;IAEZ,MAAMc,MAAM,GAAG;MAAEd,KAAK,EAAEe,QAAQ,CAACf,KAAK,EAAE,EAAE;IAAE,CAAC;IAE7C,IAAI;MACF,IAAIK,QAAQ;MACZ,IAAIH,MAAM,EAAE;QACV;QACAG,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGX,OAAO,IAAIO,MAAM,EAAE,EAAE;UAC7Cc,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,MAAM;QAC7B,CAAC,CAAC;MACJ,CAAC,MAAM;QACL;QACAT,QAAQ,GAAG,MAAMC,KAAK,CAACX,OAAO,EAAE;UAC9BqB,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,MAAM;QAC7B,CAAC,CAAC;MACJ;MAEA,IAAIT,QAAQ,CAACgB,EAAE,EAAE;QACfjB,YAAY,CAAC,CAAC,CAAC,CAAC;QAChBkB,SAAS,CAAC,CAAC;MACb;IACF,CAAC,CAAC,OAAOb,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;;EAED;EACA,MAAMc,UAAU,GAAIT,MAAM,IAAK;IAC7BX,SAAS,CAACW,MAAM,CAACU,GAAG,CAAC;IACrBvB,QAAQ,CAACa,MAAM,CAACd,KAAK,CAAC;EACxB,CAAC;;EAED;EACA,MAAMyB,YAAY,GAAG,MAAOD,GAAG,IAAK;IAClC,IAAI;MACF,MAAMnB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGX,OAAO,IAAI6B,GAAG,EAAE,EAAE;QAChDR,MAAM,EAAE;MACV,CAAC,CAAC;MACF,IAAIX,QAAQ,CAACgB,EAAE,EAAE;QACfjB,YAAY,CAAC,CAAC,CAAC,CAAC;MAClB;IACF,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;EACF,CAAC;;EAED;EACA,MAAMa,SAAS,GAAGA,CAAA,KAAM;IACtBnB,SAAS,CAAC,IAAI,CAAC;IACfF,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,oBACEP,OAAA;IAAAgC,QAAA,gBACEhC,OAAA;MAAAgC,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGjCpC,OAAA;MAAMqC,QAAQ,EAAEpB,YAAa;MAAAe,QAAA,gBAC3BhC,OAAA;QACEsC,IAAI,EAAC,QAAQ;QACbC,KAAK,EAAEjC,KAAM;QACbkC,QAAQ,EAAGC,CAAC,IAAKlC,QAAQ,CAACkC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC1CI,WAAW,EAAC,iBAAiB;QAC7BC,QAAQ;MAAA;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFpC,OAAA;QAAQsC,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAExB,MAAM,GAAG,WAAW,GAAG;MAAW;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,EAClE5B,MAAM,iBAAIR,OAAA;QAAQsC,IAAI,EAAC,QAAQ;QAACO,OAAO,EAAEjB,SAAU;QAAAI,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzE,CAAC,eAGPpC,OAAA;MAAAgC,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBpC,OAAA;MAAO8C,MAAM,EAAC,GAAG;MAAAd,QAAA,gBACfhC,OAAA;QAAAgC,QAAA,eACEhC,OAAA;UAAAgC,QAAA,gBACEhC,OAAA;YAAAgC,QAAA,EAAI;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACfpC,OAAA;YAAAgC,QAAA,EAAI;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACdpC,OAAA;YAAAgC,QAAA,EAAI;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACRpC,OAAA;QAAAgC,QAAA,EACG5B,OAAO,CAAC2C,GAAG,CAAE3B,MAAM,iBAClBpB,OAAA;UAAAgC,QAAA,gBACEhC,OAAA;YAAAgC,QAAA,EAAKZ,MAAM,CAACU;UAAG;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACrBpC,OAAA;YAAAgC,QAAA,EAAKZ,MAAM,CAACd;UAAK;YAAA2B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACvBpC,OAAA;YAAAgC,QAAA,gBACEhC,OAAA;cAAQ6C,OAAO,EAAEA,CAAA,KAAMhB,UAAU,CAACT,MAAM,CAAE;cAAAY,QAAA,EAAC;YAAO;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAC3DpC,OAAA;cAAQ6C,OAAO,EAAEA,CAAA,KAAMd,YAAY,CAACX,MAAM,CAACU,GAAG,CAAE;cAAAE,QAAA,EAAC;YAAO;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/D,CAAC;QAAA,GANEhB,MAAM,CAACU,GAAG;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOf,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACjC,EAAA,CA3HQD,eAAe;AAAA8C,EAAA,GAAf9C,eAAe;AA6HxB,eAAeA,eAAe;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}